# Generated by Django 5.1 on 2024-11-23 16:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AzApiSettlement',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('asin', models.CharField(blank=True, db_column='Asin', max_length=255, null=True)),
                ('isamazonfulfilled', models.BooleanField(blank=True, db_column='IsAmazonFulfilled', null=True)),
                ('input_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('totalfeesestimate', models.DecimalField(blank=True, db_column='TotalFeesEstimate', decimal_places=2, max_digits=20, null=True)),
                ('referralfee', models.DecimalField(blank=True, db_column='ReferralFee', decimal_places=2, max_digits=20, null=True)),
                ('referralfee_tax', models.DecimalField(blank=True, db_column='ReferralFee_tax', decimal_places=2, max_digits=20, null=True)),
                ('variableclosingfee', models.DecimalField(blank=True, db_column='VariableClosingFee', decimal_places=2, max_digits=20, null=True)),
                ('variableclosingfee_tax', models.DecimalField(blank=True, db_column='VariableClosingFee_tax', decimal_places=2, max_digits=20, null=True)),
                ('closing_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('closing_fee_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('fullfillment_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('fullfillment_cost_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('fbaweighthandling', models.DecimalField(blank=True, db_column='FBAWeightHandling', decimal_places=2, max_digits=20, null=True)),
                ('fbaweighthandling_tax', models.DecimalField(blank=True, db_column='FBAWeightHandling_tax', decimal_places=2, max_digits=20, null=True)),
                ('fbapickandpack', models.DecimalField(blank=True, db_column='FBAPickAndPack', decimal_places=2, max_digits=20, null=True)),
                ('fbapickandpack_tax', models.DecimalField(blank=True, db_column='FBAPickAndPack_tax', decimal_places=2, max_digits=20, null=True)),
                ('final_settlement', models.DecimalField(blank=True, db_column='final settlement', decimal_places=2, max_digits=20, null=True)),
                ('total_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('last_updated_date', models.CharField(blank=True, null=True)),
                ('account_name', models.CharField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'az_api_settlement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GetFlatFileAllOrdersDataByOrderDateGeneral',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('amazon_order_id', models.CharField(blank=True, null=True)),
                ('merchant_order_id', models.CharField(blank=True, null=True)),
                ('purchase_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated_date', models.DateTimeField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, null=True)),
                ('fulfillment_channel', models.CharField(blank=True, null=True)),
                ('sales_channel', models.CharField(blank=True, null=True)),
                ('order_channel', models.CharField(blank=True, null=True)),
                ('ship_service_level', models.CharField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, null=True)),
                ('asin', models.CharField(blank=True, null=True)),
                ('item_status', models.CharField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, null=True)),
                ('item_price', models.FloatField(blank=True, null=True)),
                ('item_tax', models.FloatField(blank=True, null=True)),
                ('shipping_price', models.FloatField(blank=True, null=True)),
                ('shipping_tax', models.FloatField(blank=True, null=True)),
                ('gift_wrap_price', models.FloatField(blank=True, null=True)),
                ('gift_wrap_tax', models.FloatField(blank=True, null=True)),
                ('item_promotion_discount', models.FloatField(blank=True, null=True)),
                ('ship_promotion_discount', models.FloatField(blank=True, null=True)),
                ('ship_city', models.CharField(blank=True, null=True)),
                ('ship_state', models.CharField(blank=True, null=True)),
                ('ship_postal_code', models.CharField(blank=True, null=True)),
                ('ship_country', models.CharField(blank=True, null=True)),
                ('promotion_ids', models.CharField(blank=True, null=True)),
                ('is_business_order', models.BooleanField(blank=True, null=True)),
                ('purchase_order_number', models.CharField(blank=True, null=True)),
                ('price_designation', models.CharField(blank=True, null=True)),
                ('fulfilled_by', models.CharField(blank=True, null=True)),
                ('is_iba', models.BooleanField(blank=True, null=True)),
                ('account_name', models.CharField(blank=True, null=True)),
                ('updated_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'get_flat_file_all_orders_data_by_order_date_general',
                'managed': False,
            },
        ),
    ]
